--- cantata-2.0.1/support/utils.cpp.orig	2016-07-16 17:17:57.568656211 +0100
+++ cantata-2.0.1/support/utils.cpp	2016-07-16 17:18:06.179655660 +0100
@@ -773,7 +773,7 @@
     #elif defined Q_OS_MAC
     return fixPath(QCoreApplication::applicationDirPath())+app;
     #else
-    return QString(INSTALL_PREFIX "/"LINUX_LIB_DIR"/")+QCoreApplication::applicationName()+constDirSep+app;
+    return QString(INSTALL_PREFIX "/" LINUX_LIB_DIR "/")+QCoreApplication::applicationName()+constDirSep+app;
     #endif
 }
 
--- cantata-2.0.1/devices/musicbrainz.cpp.orig	2016-07-16 21:54:52.471055388 +0100
+++ cantata-2.0.1/devices/musicbrainz.cpp	2016-07-16 21:55:14.031054009 +0100
@@ -248,7 +248,7 @@
     }
     DBUG << "Should lookup " << discId;
 
-    MusicBrainz5::CQuery Query("cantata-"PACKAGE_VERSION_STRING);
+    MusicBrainz5::CQuery Query("cantata-" PACKAGE_VERSION_STRING);
     QList<CdAlbum> m;
     QList<QNetworkProxy> proxies=NetworkProxyFactory::self()->queryProxy(QNetworkProxyQuery(QUrl("http://musicbrainz.org")));
     foreach (const QNetworkProxy &p, proxies) {
